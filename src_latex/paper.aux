\relax 
\citation{so:survay2016}
\citation{githut}
\citation{fard2013jsnose}
\citation{fowler1997refactoring}
\providecommand \oddpage@label [2]{}
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}}
\citation{Khomh2012,jaafar2013mining}
\citation{fard2013jsnose,npmjss,nodejss,airbnbjss,jqueryjss,ESLint}
\citation{npmjss}
\citation{nodejss}
\citation{airbnbjss}
\citation{wordpressjss}
\citation{jqueryjss}
\citation{jqueryjss}
\citation{chaffer2009learning}
\citation{fard2013jsnose}
\@writefile{toc}{\contentsline {section}{\numberline {II}Background}{2}}
\newlabel{sec:background}{{II}{2}}
\citation{martin2009clean}
\citation{fontana2012automatic}
\citation{griffin2011scaling}
\citation{brodu2015toward,gallaba2015don}
\citation{ogden2015callback,brodu2015toward,fard2013jsnose}
\citation{brodu2015toward}
\citation{Jake2014es7}
\citation{fard2013jsnose}
\citation{seticert}
\citation{mccabe1976complexity}
\citation{fard2013jsnose}
\citation{crockford2008javascript}
\citation{marinescu2006object,fard2013jsnose,fontana2012automatic}
\citation{martin1996open}
\citation{martin1999refactoring,kerievsky2005refactoring,fard2013jsnose}
\citation{Khomh2012,jaafar2013mining}
\citation{mardan2014express}
\citation{bowerabout}
\citation{gruntusers}
\@writefile{toc}{\contentsline {section}{\numberline {III}Study Design}{5}}
\newlabel{setup}{{III}{5}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-A}}Studied Systems}{5}}
\@writefile{lot}{\contentsline {table}{\numberline {I}{\ignorespaces Descriptive statistics of the studied systems.\relax }}{6}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{studiedsystems}{{I}{6}}
\citation{sliwerski2005changes}
\citation{fischer2003populating}
\citation{neamtiu2005understanding,baxter1998clone,pfenning1988higher}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-B}}Data Extraction}{7}}
\newlabel{extraction}{{\unhbox \voidb@x \hbox {III-B}}{7}}
\citation{marinescu2004detection,mazinanian2016migrating}
\citation{fox2010r}
\citation{koru2008theory}
\citation{singer2003applied}
\citation{singer2003applied}
\citation{selim2010studying}
\citation{Westergaard}
\citation{selim2010studying}
\citation{koru2007modeling}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Overview of our approach to answer RQ1 and RQ2.\relax }}{8}}
\newlabel{process}{{1}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Overview of our approach to answer RQ3 and RQ4.\relax }}{8}}
\newlabel{process2}{{2}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Overview of our approach to answer RQ5.\relax }}{8}}
\newlabel{process3}{{3}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {\unhbox \voidb@x \hbox {III-C}}Analysis}{8}}
\newlabel{survival}{{\unhbox \voidb@x \hbox {III-C}}{8}}
\citation{therneau2000modeling}
\citation{therneau2000modeling}
\citation{koru2008theory}
\citation{koru2008theory}
\citation{therneau2000modeling}
\citation{selim2010studying}
\citation{therneau2000modeling}
\@writefile{lot}{\contentsline {table}{\numberline {II}{\ignorespaces Metrics computed for each type of code smell.\relax }}{9}}
\newlabel{smellmetric}{{II}{9}}
\newlabel{eq1}{{1}{9}}
\newlabel{eq2}{{2}{9}}
\newlabel{eq3}{{3}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {IV}Case Study Results}{9}}
\newlabel{sec:case-study}{{IV}{9}}
\citation{rPackage}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Survival probability trends of smelly codes vs. non-smelly codes in our fifteen JavaScript projects with the file grain approach (hazard study).\vspace  {-10pt}\relax }}{10}}
\newlabel{rq1}{{4}{10}}
\citation{koru2008theory}
\citation{selim2010studying}
\@writefile{lot}{\contentsline {table}{\numberline {III}{\ignorespaces Fault hazard ratios for each project with the line grain approach. $exp(coef)$ values means higher hazard rates.\relax }}{11}}
\newlabel{hazardlinegrain}{{III}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Survival probability trends of smelly codes vs. non-smelly codes in our fifteen JavaScript projects with the line grain including dependencies approach.\vspace  {-10pt}\relax }}{12}}
\newlabel{rq1-2}{{5}{12}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Determining a link function for express.js (left figure) and grunt.js (right figure) modules for two covariates: LOC and Code Churn respectively.\vspace  {-10pt}\relax }}{12}}
\newlabel{link}{{6}{12}}
\@writefile{lot}{\contentsline {table}{\numberline {IV}{\ignorespaces Hazard ratios for each type of code smells with file grain approach. Higher $exp(coef)$ values means higher hazard rates.\relax }}{13}}
\newlabel{smelltypes}{{IV}{13}}
\@writefile{lot}{\contentsline {table}{\numberline {V}{\ignorespaces Hazard ratios for each type of code smells with line grain approach. Higher $exp(coef)$ values means higher hazard rates.\relax }}{13}}
\newlabel{smelltypes2}{{V}{13}}
\citation{rPackage}
\@writefile{lot}{\contentsline {table}{\numberline {VI}{\ignorespaces Hazard ratios for each type of code smells with line grain including dependencies approach. Higher $exp(coef)$ values means higher hazard rates.\relax }}{14}}
\newlabel{smelltypes3}{{VI}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Survival probability trends of smelly codes vs. non-smelly codes in our fifteen JavaScript projects with the file grain approach (vulnerability study).\vspace  {-10pt}\relax }}{15}}
\newlabel{rq3}{{7}{15}}
\@writefile{lot}{\contentsline {table}{\numberline {VII}{\ignorespaces Hazard ratios (vulnerability study) for each project with the line grain approach. $exp(coef)$ values means higher hazard rates.\relax }}{15}}
\newlabel{vulnlinegrain}{{VII}{15}}
\@writefile{lot}{\contentsline {table}{\numberline {VIII}{\ignorespaces Hazard ratios (vulnerability study) for each project with the line grain including dependencies approach. $exp(coef)$ values means higher hazard rates.\relax }}{15}}
\newlabel{vulnlinegraindep}{{VIII}{15}}
\@writefile{lot}{\contentsline {table}{\numberline {IX}{\ignorespaces Hazard ratios (vulnerability study) for each type of code smells with file grain approach. Higher $exp(coef)$ values means higher hazard rates.\relax }}{16}}
\newlabel{smelltypes4}{{IX}{16}}
\@writefile{lot}{\contentsline {table}{\numberline {X}{\ignorespaces Hazard ratios (vulnerability study) for each type of code smells with line grain approach. Higher $exp(coef)$ values means higher hazard rates.\relax }}{16}}
\newlabel{smelltypes5}{{X}{16}}
\@writefile{lot}{\contentsline {table}{\numberline {XI}{\ignorespaces Hazard ratios (vulnerability study) for each type of code smells with line grain including dependencies approach. Higher $exp(coef)$ values means higher hazard rates.\relax }}{16}}
\newlabel{smelltypes6}{{XI}{16}}
\citation{rPackage}
\@writefile{lot}{\contentsline {table}{\numberline {XII}{\ignorespaces Descriptive statistics on survival over time of the largest smells of studied systems.\relax }}{18}}
\newlabel{survivalsmells}{{XII}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Survival analyzes of the largest smells of express.js.\vspace  {-10pt}\relax }}{19}}
\newlabel{survivalplots1}{{8}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Survival analyzes of the largest smells of grunt.js.\vspace  {-10pt}\relax }}{19}}
\newlabel{survivalplots2}{{9}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Survival analyzes of the largest smells of bower.js.\vspace  {-10pt}\relax }}{19}}
\newlabel{survivalplots3}{{10}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Survival analyzes of the largest smells of less.js.\vspace  {-10pt}\relax }}{19}}
\newlabel{survivalplots4}{{11}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Survival analyzes of the largest smells of request.js.\vspace  {-10pt}\relax }}{20}}
\newlabel{survivalplots5}{{12}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Survival analyzes of the largest smells of jquery.js.\vspace  {-10pt}\relax }}{20}}
\newlabel{survivalplots6}{{13}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Survival analyzes of the largest smells of hexo.js.\vspace  {-10pt}\relax }}{20}}
\newlabel{survivalplots7}{{14}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Survival analyzes of the largest smells of leaflet.js.\vspace  {-10pt}\relax }}{20}}
\newlabel{survivalplots8}{{15}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Survival analyzes of the largest smells of ramda.js.\vspace  {-10pt}\relax }}{21}}
\newlabel{survivalplots9}{{16}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces Survival analyzes of the largest smells of chart.js.\vspace  {-10pt}\relax }}{21}}
\newlabel{survivalplots10}{{17}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces Survival analyzes of the largest smells of riot.js.\vspace  {-10pt}\relax }}{21}}
\newlabel{survivalplots11}{{18}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces Survival analyzes of the largest smells of vue.js.\vspace  {-10pt}\relax }}{21}}
\newlabel{survivalplots12}{{19}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces Survival analyzes of the largest smells of moment.js.\vspace  {-10pt}\relax }}{22}}
\newlabel{survivalplots13}{{20}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces Survival analyzes of the largest smells of webpack.js.\vspace  {-10pt}\relax }}{22}}
\newlabel{survivalplots14}{{21}{22}}
\@writefile{lof}{\contentsline {figure}{\numberline {22}{\ignorespaces Survival analyzes of the largest smells of webtorrent.js.\vspace  {-10pt}\relax }}{22}}
\newlabel{survivalplots15}{{22}{22}}
\@writefile{toc}{\contentsline {section}{\numberline {V}Perceived Criticality of Code Smells by JavaScript Developers}{23}}
\newlabel{survey}{{V}{23}}
\@writefile{toc}{\contentsline {section}{\numberline {VI}Contributions (part to remove)}{23}}
\newlabel{sec:contributions}{{VI}{23}}
\citation{robert2002case}
\citation{jaafar2013mining,shihab2013studying}
\citation{fowler1997refactoring}
\citation{Gam95}
\citation{Khomh11-BGB,fard2013jsnose}
\citation{chatzigeorgiou2010investigating,CodeSmells_overtime,peters2012evaluating,tufano2015and}
\citation{shatnawi2006investigation,khomh2012exploratory,Abbes11,jaafar2013mining,tufano2015and}
\citation{Sjoberg13QEC,Abbes11}
\citation{shatnawi2006investigation}
\citation{khomh2012exploratory}
\citation{tufano2015and}
\citation{Sjoberg13QEC}
\citation{Abbes11}
\citation{fard2013jsnose}
\citation{nguyen2012detection}
\citation{ESLint}
\citation{JslinT}
\citation{JSHint}
\@writefile{toc}{\contentsline {section}{\numberline {VII}Threats to validity}{24}}
\newlabel{threats}{{VII}{24}}
\@writefile{toc}{\contentsline {section}{\numberline {VIII}Related Work}{24}}
\newlabel{sec:related}{{VIII}{24}}
\bibstyle{IEEEtran}
\bibdata{references}
\bibcite{so:survay2016}{1}
\bibcite{githut}{2}
\bibcite{fard2013jsnose}{3}
\bibcite{fowler1997refactoring}{4}
\bibcite{Khomh2012}{5}
\bibcite{jaafar2013mining}{6}
\bibcite{npmjss}{7}
\bibcite{nodejss}{8}
\bibcite{airbnbjss}{9}
\bibcite{jqueryjss}{10}
\bibcite{ESLint}{11}
\bibcite{wordpressjss}{12}
\bibcite{chaffer2009learning}{13}
\bibcite{martin2009clean}{14}
\bibcite{fontana2012automatic}{15}
\bibcite{griffin2011scaling}{16}
\bibcite{brodu2015toward}{17}
\bibcite{gallaba2015don}{18}
\@writefile{toc}{\contentsline {section}{\numberline {IX}Conclusion}{25}}
\newlabel{conclusion}{{IX}{25}}
\@writefile{toc}{\contentsline {section}{References}{25}}
\bibcite{ogden2015callback}{19}
\bibcite{Jake2014es7}{20}
\bibcite{seticert}{21}
\bibcite{mccabe1976complexity}{22}
\bibcite{crockford2008javascript}{23}
\bibcite{marinescu2006object}{24}
\bibcite{martin1996open}{25}
\bibcite{martin1999refactoring}{26}
\bibcite{kerievsky2005refactoring}{27}
\bibcite{mardan2014express}{28}
\bibcite{bowerabout}{29}
\bibcite{gruntusers}{30}
\bibcite{sliwerski2005changes}{31}
\bibcite{fischer2003populating}{32}
\bibcite{neamtiu2005understanding}{33}
\bibcite{baxter1998clone}{34}
\bibcite{pfenning1988higher}{35}
\bibcite{marinescu2004detection}{36}
\bibcite{mazinanian2016migrating}{37}
\bibcite{fox2010r}{38}
\bibcite{koru2008theory}{39}
\bibcite{singer2003applied}{40}
\bibcite{selim2010studying}{41}
\bibcite{Westergaard}{42}
\bibcite{koru2007modeling}{43}
\bibcite{therneau2000modeling}{44}
\bibcite{rPackage}{45}
\bibcite{robert2002case}{46}
\bibcite{shihab2013studying}{47}
\bibcite{Gam95}{48}
\bibcite{Khomh11-BGB}{49}
\bibcite{chatzigeorgiou2010investigating}{50}
\bibcite{CodeSmells_overtime}{51}
\bibcite{peters2012evaluating}{52}
\bibcite{tufano2015and}{53}
\bibcite{shatnawi2006investigation}{54}
\bibcite{khomh2012exploratory}{55}
\bibcite{Abbes11}{56}
\bibcite{Sjoberg13QEC}{57}
\bibcite{nguyen2012detection}{58}
\bibcite{JslinT}{59}
\bibcite{JSHint}{60}
